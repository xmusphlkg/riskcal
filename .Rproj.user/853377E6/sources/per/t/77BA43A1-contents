---
title: "baiduqianxi"
author: "Likangguo"
date: "2021/10/28"
output: html_document
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```

## 百度数据爬取

```{r message=FALSE, warning=FALSE}
library(tidyverse)
library(jsonlite)

df_id <- openxlsx::read.xlsx('./data/id.xlsx', colNames = F)
names(df_id) <- c("id", 'name', "adcode")

mobility_get <- function(area_name, direction, date_input){
     
     area_info <- df_id %>% 
          filter(str_detect(name, area_name))
     area_id <- area_info[,3]
     
     if(area_id %in% c(110000, 310000, 500000, 120000)){
          class_name <- "province"
     } else {
          class_name <- "city"
     }
     
     url <- paste0(
          'http://huiyan.baidu.com/migration/cityrank.jsonp?dt=', class_name,
          '&id=', area_id,
          "&type=", direction,
          "&date=", date_input
     )
     
     huiyan_df <- fromJSON(
          paste(readLines(url,warn = F, encoding = 'unicode'), collapse = "") %>% 
               str_remove("cb") %>% 
               str_remove_all("\\(|\\)")
     )
     huiyan_df <- huiyan_df$data$list
     huiyan_df$date <- date_input
     huiyan_df$city <- str_remove_all(area_info[,2], "'")
     return(huiyan_df)
}

area_name <- c("黑河")
# class_name <- 'city' #city，province，country
direction <- 'move_out'    #in, out
date_input <- format(Sys.Date()-2, format = '%Y%m%d')

raw_datafile <- mobility_get(area_name, direction , date_input)

```

## 高德点数据获取

```{r}

datafile <- data.frame(
     id = 1:nrow(raw_datafile),
     address = paste(raw_datafile$province_name, raw_datafile$city_name)
)
key <-  '11eb5fc7a625d45cf34172a043eda0c3'

gaodemap <- function(x){
  address <- stringr::str_replace_all(datafile$address[x], "[^[:alnum:]]", "")
  url <- paste0(
    'https://restapi.amap.com/v3/geocode/geo?',
    '&key=', key, ## key
    '&address=', address, ## 详细地址
    '&output=', 'JSON'
  )
  temp_geo <- fromJSON(paste(readLines(url,warn = F, encoding = 'UTF-8'), collapse = ""))
  status <- temp_geo$status ## 判断查询是否成功
  if (status == 1 & length(temp_geo$geocodes) != 0){ ## 有时候成功了但是没有收到数据，所以用了一个“且”进行判定
    temp <- paste(datafile$address[x], temp_geo$geocodes$location, sep = ",")
  } else {
    temp <- paste(datafile$address[x], 'NULL,NULL', sep = ",")
  }
  return(temp)
}

## 地理编码

df <- data.frame(
  geo = sapply(datafile$id, gaodemap, simplify = T)  ## 查询api
) %>% 
  separate(col = geo, into = c('address', 'lng', 'lat'), sep = ',') ## 分割function的结果

df$lng <- as.numeric(df$lng)
df$lat <- as.numeric(df$lat)

df$lng_start <- 116.39768
df$lat_start <- 39.90462
df$value <- raw_datafile$value
df$province <- raw_datafile$province_name

# A function that makes a dateframe per connection (we will use these connections to plot each lines)
library(geosphere)

data_for_connection=function( dep_lon, dep_lat, arr_lon, arr_lat, group){
  inter <- gcIntermediate(c(dep_lon, dep_lat), c(arr_lon, arr_lat), n=50, addStartEnd=TRUE, breakAtDateLine=F)             
  inter=data.frame(inter)
  inter$group=NA
  diff_of_lon=abs(dep_lon) + abs(arr_lon)
  if(diff_of_lon > 180){
    inter$group[ which(inter$lon>=0)]=paste(group, "A",sep="")
    inter$group[ which(inter$lon<0)]=paste(group, "B",sep="")
  }else{
    inter$group=group
  }
  return(inter)
}

```

```{r}
data_ready_plot=data.frame()
for(i in c(1:nrow(df))){
  tmp=data_for_connection(df$lng_start[i], df$lat_start[i], df$lng[i], df$lat[i] , i)
  tmp$province=df$province[i]
  tmp$n=df$value[i]
  data_ready_plot=rbind(data_ready_plot, tmp)
}

data_ready_plot$province <- as.factor(data_ready_plot$province)
```

## 画图

```{r message=FALSE, warning=FALSE}
df_case <- data.frame(
     id = c("海南省", "辽宁省", "内蒙古自治区", "宁夏回族自治区"),
     value = c(5, 8, 6, 10)
)


## geojson
library(geojsonio)
spdf <- geojson_read("./data/china/china.json",  what = "sp")
library(broom)
spdf_fortified <- tidy(spdf, region = "省")
spdf_fortified <- spdf_fortified %>% 
     left_join(df_case, by = c('id' = 'id'))

## shp
library(sf)
map_data<-st_read("D:\\OneDrive - kanggle\\database\\Geo\\map\\province\\province.shp")[,c('NAME', 'geometry')]

sf_data <- map_data %>% 
     left_join(
          data.frame(
               NAME = c("辽宁", "天津", "青海", "甘肃", "陕西"),
               value = rnorm(5, 10, 3)
          )
     )

# Plot it
# library(ggplot2)
# ggplot() +
#   geom_polygon(data = spdf_fortified, aes( x = long, y = lat, group = group), fill="#69b3a2", color="white") +
#   theme_void() +
#   coord_map()
```

```{r}

p <- ggplot() +
  ##    plot shp
  geom_sf(data = sf_data, mapping = aes(fill = value))+
  # geom_point(data=df, aes(x=lng, y=lat, 
  #                         size=value, colour = province))+
  # geom_line(data=data_ready_plot, aes(x=lon, y=lat, group=group, 
  #                                     alpha = 1, colour = province, size=0.3)) +
  # scale_fill_manual(values = colorRampPalette(brewer.pal(12, "Paired"))(colourCount),
  #                   na.value = "#e0eeee") +
  # theme_void() +
  # theme(
  #       legend.position="none",
  #       panel.background = element_rect(fill = "white", colour = "white"), 
  #       panel.spacing=unit(c(0,0,0,0), "null"),
  #       plot.margin=grid::unit(c(0,0,0,0), "cm"),
  # ) +
  # ggplot2::annotate("text", x = -150, y = -45, hjust = 0, size = 11, label = paste("Where surfers travel."), color = "white") +
  # ggplot2::annotate("text", x = -150, y = -51, hjust = 0, size = 8, label = paste("data-to-viz.com | NASA.gov | 10,000 #surf tweets recovered"), color = "white", alpha = 0.5) +
  #ggplot2::annotate("text", x = 160, y = -51, hjust = 1, size = 7, label = paste("Cacedédi Air-Guimzu 2018"), color = "white", alpha = 0.5) +
  # xlim(-180,180) +
  # ylim(-60,80) +
  # scale_x_continuous(expand = c(0.006, 0.006)) +
  coord_sf(xlim = c(70, 135), ylim = c(0, 55), expand = F)
  # coord_equal()


```



```{r}
library(RColorBrewer)
colourCount = length(unique(df$province))
getPalette = colorRampPalette(brewer.pal(9, "Set1"))


p <- ggplot() +
  # annotation_custom(earth, xmin = -180, xmax = 180, ymin = -90, ymax = 90) +
  ##   plot geojson
  geom_polygon(data = spdf_fortified, aes(x = long, y = lat,
                                          group = group, fill = as.factor(value)),
               color="black") +
  ##    plot shp
  # geom_sf(data = sf_data, mapping = aes(fill = as.factor(value)))+
  geom_point(data=df, aes(x=lng, y=lat, 
                          size=value, colour = province))+
  geom_line(data=data_ready_plot, aes(x=lon, y=lat, group=group, 
                                      alpha = 1, colour = province, size=0.3)) +
  scale_fill_manual(values = colorRampPalette(brewer.pal(12, "Paired"))(colourCount),
                    na.value = "#e0eeee") +
  theme_void() +
  theme(
        legend.position="none",
        panel.background = element_rect(fill = "white", colour = "white"), 
        panel.spacing=unit(c(0,0,0,0), "null"),
        plot.margin=grid::unit(c(0,0,0,0), "cm"),
  ) +
  # ggplot2::annotate("text", x = -150, y = -45, hjust = 0, size = 11, label = paste("Where surfers travel."), color = "white") +
  # ggplot2::annotate("text", x = -150, y = -51, hjust = 0, size = 8, label = paste("data-to-viz.com | NASA.gov | 10,000 #surf tweets recovered"), color = "white", alpha = 0.5) +
  #ggplot2::annotate("text", x = 160, y = -51, hjust = 1, size = 7, label = paste("Cacedédi Air-Guimzu 2018"), color = "white", alpha = 0.5) +
  # xlim(-180,180) +
  # ylim(-60,80) +
  scale_x_continuous(expand = c(0.006, 0.006)) +
  # coord_sf(xlim = c(70, 135), ylim = c(0, 55), expand = FALSE)
  coord_equal()

ggsave("china.png", width = 36, height = 15.22, units = "in", dpi = 300)

```



